/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['AnyConvcom__AEGS-Redeemer']: THREE.Mesh
  }
  materials: {}
}

export default function Redeemer({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/redeemer.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh name='redeemer' geometry={nodes['AnyConvcom__AEGS-Redeemer'].geometry} material={nodes['AnyConvcom__AEGS-Redeemer'].material} rotation={[0, 0, 0]} scale={0.001}>
        <meshStandardMaterial color='green'/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/redeemer.gltf')
